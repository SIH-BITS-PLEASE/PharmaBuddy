[{"/home/anonymous/PharmaBuddy/src/index.js":"1","/home/anonymous/PharmaBuddy/src/App.js":"2","/home/anonymous/PharmaBuddy/src/components/index.jsx":"3","/home/anonymous/PharmaBuddy/src/components/homeScreen.jsx":"4","/home/anonymous/PharmaBuddy/src/components/forgotPassword.jsx":"5","/home/anonymous/PharmaBuddy/src/components/pharmaForm.jsx":"6","/home/anonymous/PharmaBuddy/src/components/addMed.jsx":"7","/home/anonymous/PharmaBuddy/src/firebase.js":"8","/home/anonymous/PharmaBuddy/src/constants.js":"9","/home/anonymous/PharmaBuddy/src/components/stockList.jsx":"10","/home/anonymous/PharmaBuddy/src/stores/userStore.js":"11","/home/anonymous/PharmaBuddy/src/components/sellMed.jsx":"12"},{"size":197,"mtime":1648029105427,"results":"13","hashOfConfig":"14"},{"size":762,"mtime":1648025190747,"results":"15","hashOfConfig":"14"},{"size":2573,"mtime":1648045140421,"results":"16","hashOfConfig":"14"},{"size":912,"mtime":1648044569236,"results":"17","hashOfConfig":"14"},{"size":924,"mtime":1648042894601,"results":"18","hashOfConfig":"14"},{"size":2836,"mtime":1648057642830,"results":"19","hashOfConfig":"14"},{"size":2427,"mtime":1648044398378,"results":"20","hashOfConfig":"14"},{"size":657,"mtime":1648053153895,"results":"21","hashOfConfig":"14"},{"size":286,"mtime":1648011385387,"results":"22","hashOfConfig":"14"},{"size":1922,"mtime":1648045163794,"results":"23","hashOfConfig":"14"},{"size":746,"mtime":1648011385387,"results":"24","hashOfConfig":"14"},{"size":2135,"mtime":1648044669053,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1da47ik",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/anonymous/PharmaBuddy/src/index.js",[],[],"/home/anonymous/PharmaBuddy/src/App.js",[],[],"/home/anonymous/PharmaBuddy/src/components/index.jsx",[],[],"/home/anonymous/PharmaBuddy/src/components/homeScreen.jsx",["65"],[],"import React, { useEffect, useState } from \"react\";\nimport userStore from \"../stores/userStore\";\nimport { Navigate } from \"react-router-dom\";\nimport StockList from \"./stockList\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport db from \"../firebase\";\n\nfunction HomeScreen() {\n  const user = userStore.getState().user;\n  const [tokenHome, setTokenHome] = useState(false);\n  useEffect(() => {\n    const fetchPharma = async () => {\n      if (!user) return;\n      if (!user.uid) return;\n      const ref = doc(db, \"Pharma\", user.uid);\n      const docSnap = await getDoc(ref);\n      if (!docSnap.exists()) return setTokenHome(true);\n      return setTokenHome(false);\n    };\n    fetchPharma();\n  }, [tokenHome]);\n  if (!user) return <Navigate to=\"/\" />;\n\n  return (\n    <React.Fragment>\n      {tokenHome ? <Navigate to=\"/filldetails\" /> : <StockList />}\n    </React.Fragment>\n  );\n}\n\nexport default HomeScreen;\n","/home/anonymous/PharmaBuddy/src/components/forgotPassword.jsx",[],[],"/home/anonymous/PharmaBuddy/src/components/pharmaForm.jsx",["66"],[],"import React, { useRef, useEffect, useState } from \"react\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport db from \"../firebase\";\nimport userStore from \"../stores/userStore\";\nimport { Navigate } from \"react-router-dom\";\n\nfunction PharmaForm() {\n  const nameRef = useRef(null);\n  const addRef = useRef(null);\n  const ctRef = useRef(null);\n  const otRef = useRef(null);\n  const [location, setLocation] = useState([0, 0]);\n  const [token, setToken] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n  useEffect(() => {\n    async function run() {\n      try {\n        const ref = doc(db, \"Pharma\", userStore.getState().user.uid);\n        const payload = {\n          id: userStore.getState().user.uid,\n          name: nameRef.current.value,\n          address: addRef.current.value,\n          meds: [],\n          location: location,\n          opening: otRef.current.value,\n          closing: ctRef.current.value,\n        };\n        await setDoc(ref, payload).then(setRedirect(true));\n      } catch (e) {\n        console.log(e);\n        setToken(false);\n      }\n    }\n    if (token) run();\n    setToken(false);\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        function (position) {\n          var latitude = position.coords.latitude;\n          var longitude = position.coords.longitude;\n          setLocation([latitude, longitude]);\n        },\n        function error(msg) {\n          alert(\"Please enable your GPS position feature.\");\n        },\n        { maximumAge: 600000, timeout: 5000, enableHighAccuracy: true }\n      );\n    } else {\n      alert(\"Geolocation API is not supported in your browser.\");\n    }\n  }, [token]);\n  if (!userStore.getState().user) return <Navigate to=\"/\" />;\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setToken(true);\n  };\n\n  return (\n    <div className=\"container\">\n      {redirect ? (\n        <Navigate to=\"/home\" />\n      ) : (\n        <form>\n          <input\n            className=\"box\"\n            ref={nameRef}\n            type=\"text\"\n            placeholder=\"Pharma Name\"\n          />\n          <br />\n          <input\n            className=\"box\"\n            ref={addRef}\n            type=\"text\"\n            placeholder=\"Address\"\n          />\n          <br />\n          <input\n            className=\"box\"\n            ref={otRef}\n            type=\"text\"\n            placeholder=\"Opening Time\"\n          />\n          <br />\n          <input\n            className=\"box\"\n            ref={ctRef}\n            type=\"text\"\n            placeholder=\"Closing Time\"\n          />\n          <br />\n          <input\n            className=\"btn selected btn-fluid2\"\n            type=\"button\"\n            value=\"submit\"\n            onClick={handleSubmit}\n          />\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default PharmaForm;\n","/home/anonymous/PharmaBuddy/src/components/addMed.jsx",["67"],[],"import React from \"react\";\nimport { useRef, useState, useEffect } from \"react\";\nimport userStore from \"../stores/userStore\";\nimport { Navigate } from \"react-router-dom\";\nimport { getDoc, setDoc, doc } from \"firebase/firestore\";\nimport db from \"../firebase\";\n\nfunction AddMed() {\n  const user = userStore.getState().user;\n  const [tokenAdd, setTokenAdd] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n  useEffect(() => {\n    if (!user) return;\n    const code = async () => {\n      const ref = doc(db, \"Pharma\", user.uid);\n      const docSnap = await getDoc(ref);\n      var data = docSnap.data();\n      var oldmeds = data.meds;\n      if (tokenAdd) {\n        try {\n          var found = false;\n          for (var i = 0; i < oldmeds.length; i++) {\n            if (oldmeds[i].name === nameRef.current.value) {\n              oldmeds[i].quantity += parseInt(quantityRef.current.value);\n              oldmeds[i].price = parseInt(priceRef.current.value);\n              found = true;\n              break;\n            }\n          }\n          if (!found) {\n            oldmeds.push({\n              name: nameRef.current.value,\n              quantity: parseInt(quantityRef.current.value),\n              price: parseInt(priceRef.current.value),\n            });\n          }\n          data.meds = oldmeds;\n          await setDoc(ref, data);\n          setRedirect(true);\n        } catch (e) {\n          alert(e.message);\n        }\n      }\n    };\n    code();\n    setTokenAdd(false);\n  }, [tokenAdd]);\n  const nameRef = useRef(null);\n  const quantityRef = useRef(null);\n  const priceRef = useRef(null);\n  if (!user) return <Navigate to=\"/\" />;\n  const handleAdd = (e) => {\n    e.preventDefault();\n    setTokenAdd(true);\n  };\n  return (\n    <div className=\"container\">\n      {redirect ? (\n        <Navigate to=\"/home\" />\n      ) : (\n        <form action=\"\">\n          <input class=\"btn\" type=\"text\" placeholder=\"Med Name\" ref={nameRef} />\n          <input\n            class=\"btn\"\n            type=\"text\"\n            placeholder=\"quantity\"\n            ref={quantityRef}\n          />\n          <input class=\"btn\" type=\"text\" placeholder=\"price\" ref={priceRef} />\n          <br />\n          <br />\n          <input\n            class=\"btn selected btn-fluid2\"\n            type=\"button\"\n            value=\"Add Stock\"\n            onClick={handleAdd}\n          />\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default AddMed;\n","/home/anonymous/PharmaBuddy/src/firebase.js",[],[],"/home/anonymous/PharmaBuddy/src/constants.js",[],[],"/home/anonymous/PharmaBuddy/src/components/stockList.jsx",[],[],"/home/anonymous/PharmaBuddy/src/stores/userStore.js",[],[],"/home/anonymous/PharmaBuddy/src/components/sellMed.jsx",[],[],{"ruleId":"68","severity":1,"message":"69","line":21,"column":6,"nodeType":"70","endLine":21,"endColumn":17,"suggestions":"71"},{"ruleId":"68","severity":1,"message":"72","line":51,"column":6,"nodeType":"70","endLine":51,"endColumn":13,"suggestions":"73"},{"ruleId":"68","severity":1,"message":"69","line":47,"column":6,"nodeType":"70","endLine":47,"endColumn":16,"suggestions":"74"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["75"],"React Hook useEffect has a missing dependency: 'location'. Either include it or remove the dependency array.",["76"],["77"],{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [tokenHome, user]",{"range":"84","text":"85"},"Update the dependencies array to be: [location, token]",{"range":"86","text":"87"},"Update the dependencies array to be: [tokenAdd, user]",{"range":"88","text":"89"},[700,711],"[tokenHome, user]",[1678,1685],"[location, token]",[1493,1503],"[tokenAdd, user]"]