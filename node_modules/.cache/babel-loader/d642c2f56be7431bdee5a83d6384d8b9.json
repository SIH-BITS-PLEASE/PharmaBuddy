{"ast":null,"code":"var _jsxFileName = \"/home/anonymous/PharmaBuddy/src/components/stockList.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport userStore from \"../stores/userStore\";\nimport db from \"../firebase\";\nimport { getDoc, doc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StockList() {\n  _s();\n\n  const [medsList, setMedsList] = useState(userStore.getState().meds);\n  const user = userStore.getState().user;\n  useEffect(() => {\n    async function getmeds() {\n      const ref = doc(db, \"Pharma\", user.uid);\n      const docSnap = await getDoc(ref);\n      const data = docSnap.data();\n      setMedsList(data.meds);\n    }\n\n    getmeds();\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), medslist && medsList.map(_ref => {\n        let {\n          name,\n          quantity,\n          price\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this)]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StockList, \"ARq2C6flT1U6NYswKQJDnbbCFeE=\");\n\n_c = StockList;\nexport default StockList;\n\nvar _c;\n\n$RefreshReg$(_c, \"StockList\");","map":{"version":3,"sources":["/home/anonymous/PharmaBuddy/src/components/stockList.jsx"],"names":["React","useState","useEffect","userStore","db","getDoc","doc","StockList","medsList","setMedsList","getState","meds","user","getmeds","ref","uid","docSnap","data","medslist","map","name","quantity","price"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,EAAP,MAAe,aAAf;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,oBAA5B;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAACE,SAAS,CAACO,QAAV,GAAqBC,IAAtB,CAAxC;AACA,QAAMC,IAAI,GAAGT,SAAS,CAACO,QAAV,GAAqBE,IAAlC;AACAV,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeW,OAAf,GAAyB;AACvB,YAAMC,GAAG,GAAGR,GAAG,CAACF,EAAD,EAAK,QAAL,EAAeQ,IAAI,CAACG,GAApB,CAAf;AACA,YAAMC,OAAO,GAAG,MAAMX,MAAM,CAACS,GAAD,CAA5B;AACA,YAAMG,IAAI,GAAGD,OAAO,CAACC,IAAR,EAAb;AACAR,MAAAA,WAAW,CAACQ,IAAI,CAACN,IAAN,CAAX;AACD;;AACDE,IAAAA,OAAO;AACR,GARQ,CAAT;AASA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAMGK,QAAQ,IACPV,QAAQ,CAACW,GAAT,CAAa,QAA+B;AAAA,YAA9B;AAAEC,UAAAA,IAAF;AAAQC,UAAAA,QAAR;AAAkBC,UAAAA;AAAlB,SAA8B;AAC1C,4BACE;AAAA,kCACE;AAAA,sBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA,WAASF,IAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OARD,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAjCQb,S;;KAAAA,S;AAmCT,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport userStore from \"../stores/userStore\";\nimport db from \"../firebase\";\nimport { getDoc, doc } from \"firebase/firestore\";\n\nfunction StockList() {\n  const [medsList, setMedsList] = useState(userStore.getState().meds);\n  const user = userStore.getState().user;\n  useEffect(() => {\n    async function getmeds() {\n      const ref = doc(db, \"Pharma\", user.uid);\n      const docSnap = await getDoc(ref);\n      const data = docSnap.data();\n      setMedsList(data.meds);\n    }\n    getmeds();\n  });\n  return (\n    <React.Fragment>\n      <table>\n        <tr>\n          <th>Name</th>\n          <th>Price</th>\n          <th>Quantity</th>\n        </tr>\n        {medslist &&\n          medsList.map(({ name, quantity, price }) => {\n            return (\n              <tr key={name}>\n                <td>{name}</td>\n                <td>{quantity}</td>\n                <td>{price}</td>\n              </tr>\n            );\n          })}\n      </table>\n    </React.Fragment>\n  );\n}\n\nexport default StockList;\n"]},"metadata":{},"sourceType":"module"}