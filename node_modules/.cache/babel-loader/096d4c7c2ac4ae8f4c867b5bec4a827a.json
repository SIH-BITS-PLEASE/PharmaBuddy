{"ast":null,"code":"var _jsxFileName = \"/home/anonymous/PharmaBuddy/src/components/pharmaForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport db from \"../firebase\";\nimport userStore from \"../stores/userStore\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PharmaForm() {\n  _s();\n\n  const nameRef = useRef(null);\n  const addRef = useRef(null);\n  const ctRef = useRef(null);\n  const otRef = useRef(null);\n  const [location, setLocation] = useState([0, 0]);\n  const [token, setToken] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n  useEffect(() => {\n    async function run() {\n      try {\n        const ref = doc(db, \"Pharma\", userStore.getState().user.uid);\n        const payload = {\n          id: userStore.getState().user.uid,\n          name: nameRef.current.value,\n          address: addRef.current.value,\n          meds: [],\n          location: location\n        };\n        await setDoc(ref, payload).then(setRedirect(true));\n      } catch (e) {\n        console.log(e);\n        setToken(false);\n      }\n    }\n\n    if (token) run();\n    setToken(false);\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var latitude = position.coords.latitude;\n        var longitude = position.coords.longitude;\n        setLocation([latitude, longitude]);\n      }, function error(msg) {\n        alert(\"Please enable your GPS position feature.\");\n      }, {\n        maximumAge: 600000,\n        timeout: 5000,\n        enableHighAccuracy: true\n      });\n    } else {\n      alert(\"Geolocation API is not supported in your browser.\");\n    }\n  }, [token]);\n  if (!userStore.getState().user) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 42\n  }, this);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setToken(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: redirect ? /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"box\",\n        ref: nameRef,\n        type: \"text\",\n        placeholder: \"Pharma Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"box\",\n        ref: addRef,\n        type: \"text\",\n        placeholder: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"box\",\n        ref: otRef,\n        type: \"text\",\n        placeholder: \"Opening Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"box\",\n        ref: ctRef,\n        type: \"text\",\n        placeholder: \"Closing Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"btn selected btn-fluid2\",\n        type: \"button\",\n        value: \"submit\",\n        onClick: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PharmaForm, \"7eSOrVzGWz0SVEadFpSO+aDeZxA=\");\n\n_c = PharmaForm;\nexport default PharmaForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PharmaForm\");","map":{"version":3,"sources":["/home/anonymous/PharmaBuddy/src/components/pharmaForm.jsx"],"names":["React","useRef","useEffect","useState","doc","setDoc","db","userStore","Navigate","PharmaForm","nameRef","addRef","ctRef","otRef","location","setLocation","token","setToken","redirect","setRedirect","run","ref","getState","user","uid","payload","id","name","current","value","address","meds","then","e","console","log","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","error","msg","alert","maximumAge","timeout","enableHighAccuracy","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport db from \"../firebase\";\nimport userStore from \"../stores/userStore\";\nimport { Navigate } from \"react-router-dom\";\n\nfunction PharmaForm() {\n  const nameRef = useRef(null);\n  const addRef = useRef(null);\n  const ctRef = useRef(null);\n  const otRef = useRef(null);\n  const [location, setLocation] = useState([0, 0]);\n  const [token, setToken] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n  useEffect(() => {\n    async function run() {\n      try {\n        const ref = doc(db, \"Pharma\", userStore.getState().user.uid);\n        const payload = {\n          id: userStore.getState().user.uid,\n          name: nameRef.current.value,\n          address: addRef.current.value,\n          meds: [],\n          location: location,\n        };\n        await setDoc(ref, payload).then(setRedirect(true));\n      } catch (e) {\n        console.log(e);\n        setToken(false);\n      }\n    }\n    if (token) run();\n    setToken(false);\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        function (position) {\n          var latitude = position.coords.latitude;\n          var longitude = position.coords.longitude;\n          setLocation([latitude, longitude]);\n        },\n        function error(msg) {\n          alert(\"Please enable your GPS position feature.\");\n        },\n        { maximumAge: 600000, timeout: 5000, enableHighAccuracy: true }\n      );\n    } else {\n      alert(\"Geolocation API is not supported in your browser.\");\n    }\n  }, [token]);\n  if (!userStore.getState().user) return <Navigate to=\"/\" />;\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setToken(true);\n  };\n\n  return (\n    <div className=\"container\">\n      {redirect ? (\n        <Navigate to=\"/home\" />\n      ) : (\n        <form>\n          <input\n            className=\"box\"\n            ref={nameRef}\n            type=\"text\"\n            placeholder=\"Pharma Name\"\n          />\n          <br />\n          <input\n            className=\"box\"\n            ref={addRef}\n            type=\"text\"\n            placeholder=\"Address\"\n          />\n          <br />\n          <input\n            className=\"box\"\n            ref={otRef}\n            type=\"text\"\n            placeholder=\"Opening Time\"\n          />\n          <br />\n          <input\n            className=\"box\"\n            ref={ctRef}\n            type=\"text\"\n            placeholder=\"Closing Time\"\n          />\n          <br />\n          <input\n            className=\"btn selected btn-fluid2\"\n            type=\"button\"\n            value=\"submit\"\n            onClick={handleSubmit}\n          />\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default PharmaForm;\n"]},"metadata":{},"sourceType":"module"}