{"ast":null,"code":"var _jsxFileName = \"/home/anonymous/PharmaBuddy/src/components/stockList.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport userStore from \"../stores/userStore\";\nimport db from \"../firebase\";\nimport { getDoc, doc } from \"firebase/firestore\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StockList() {\n  _s();\n\n  const [medsList, setMedsList] = useState(userStore.getState().meds);\n  const [redirect, setRedirect] = useState(false);\n  const user = userStore.getState().user;\n  useEffect(() => {\n    async function getmeds() {\n      const ref = doc(db, \"Pharma\", user.uid);\n      const docSnap = await getDoc(ref);\n      const data = docSnap.data();\n      if (data.meds.length === 0) setRedirect(true);\n      setMedsList(data.meds);\n    }\n\n    getmeds();\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: redirect ? /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/addmeds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), medsList && medsList.map(_ref => {\n        let {\n          name,\n          quantity,\n          price\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 19\n          }, this)]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StockList, \"qGHMHllKFGGY/DyE18BgnZDNQhw=\");\n\n_c = StockList;\nexport default StockList;\n\nvar _c;\n\n$RefreshReg$(_c, \"StockList\");","map":{"version":3,"sources":["/home/anonymous/PharmaBuddy/src/components/stockList.jsx"],"names":["React","useState","useEffect","userStore","db","getDoc","doc","Navigate","StockList","medsList","setMedsList","getState","meds","redirect","setRedirect","user","getmeds","ref","uid","docSnap","data","length","map","name","quantity","price"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,EAAP,MAAe,aAAf;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,oBAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAACE,SAAS,CAACQ,QAAV,GAAqBC,IAAtB,CAAxC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMc,IAAI,GAAGZ,SAAS,CAACQ,QAAV,GAAqBI,IAAlC;AACAb,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAec,OAAf,GAAyB;AACvB,YAAMC,GAAG,GAAGX,GAAG,CAACF,EAAD,EAAK,QAAL,EAAeW,IAAI,CAACG,GAApB,CAAf;AACA,YAAMC,OAAO,GAAG,MAAMd,MAAM,CAACY,GAAD,CAA5B;AACA,YAAMG,IAAI,GAAGD,OAAO,CAACC,IAAR,EAAb;AACA,UAAIA,IAAI,CAACR,IAAL,CAAUS,MAAV,KAAqB,CAAzB,EAA4BP,WAAW,CAAC,IAAD,CAAX;AAC5BJ,MAAAA,WAAW,CAACU,IAAI,CAACR,IAAN,CAAX;AACD;;AACDI,IAAAA,OAAO;AACR,GATQ,CAAT;AAUA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,cACGH,QAAQ,gBACP,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADO,gBAGP;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAMGJ,QAAQ,IACPA,QAAQ,CAACa,GAAT,CAAa,QAA+B;AAAA,YAA9B;AAAEC,UAAAA,IAAF;AAAQC,UAAAA,QAAR;AAAkBC,UAAAA;AAAlB,SAA8B;AAC1C,4BACE;AAAA,kCACE;AAAA,sBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA,WAASF,IAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OARD,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAvCQf,S;;KAAAA,S;AAyCT,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport userStore from \"../stores/userStore\";\nimport db from \"../firebase\";\nimport { getDoc, doc } from \"firebase/firestore\";\nimport { Navigate } from \"react-router-dom\";\n\nfunction StockList() {\n  const [medsList, setMedsList] = useState(userStore.getState().meds);\n  const [redirect, setRedirect] = useState(false);\n  const user = userStore.getState().user;\n  useEffect(() => {\n    async function getmeds() {\n      const ref = doc(db, \"Pharma\", user.uid);\n      const docSnap = await getDoc(ref);\n      const data = docSnap.data();\n      if (data.meds.length === 0) setRedirect(true);\n      setMedsList(data.meds);\n    }\n    getmeds();\n  });\n  return (\n    <React.Fragment>\n      {redirect ? (\n        <Navigate to=\"/addmeds\" />\n      ) : (\n        <table>\n          <tr>\n            <th>Name</th>\n            <th>Price</th>\n            <th>Quantity</th>\n          </tr>\n          {medsList &&\n            medsList.map(({ name, quantity, price }) => {\n              return (\n                <tr key={name}>\n                  <td>{name}</td>\n                  <td>{quantity}</td>\n                  <td>{price}</td>\n                </tr>\n              );\n            })}\n        </table>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default StockList;\n"]},"metadata":{},"sourceType":"module"}