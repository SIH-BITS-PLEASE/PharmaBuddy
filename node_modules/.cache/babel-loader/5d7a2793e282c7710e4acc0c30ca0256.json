{"ast":null,"code":"var _jsxFileName = \"/home/anonymous/PharmaBuddy/src/components/stockList.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport userStore from \"../stores/userStore\";\nimport db from \"../firebase\";\nimport { getDoc, doc } from \"firebase/firestore\";\nimport { Navigate } from \"react-router-dom\";\nimport SellMed from \"./sellMed\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StockList() {\n  _s();\n\n  const [medsList, setMedsList] = useState(userStore.getState().meds);\n  const [redirect, setRedirect] = useState(false);\n  const [addS, setaddS] = useState(false);\n  const user = userStore.getState().user;\n  useEffect(() => {\n    async function getmeds() {\n      const ref = doc(db, \"Pharma\", user.uid);\n      const docSnap = await getDoc(ref);\n      const data = docSnap.data();\n\n      if (!data.meds) {\n        setRedirect(true);\n        return;\n      } else if (data.meds.length === 0) setRedirect(true);else setRedirect(false);\n\n      setMedsList(data.meds);\n    }\n\n    getmeds();\n  });\n\n  const handleAdd = () => {\n    setRedirect(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: redirect ? /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/addmeds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SellMed, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: medsList && medsList.map(_ref => {\n            let {\n              name,\n              quantity,\n              price\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 23\n              }, this)]\n            }, name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn selected btn-fluid2\",\n        onClick: handleAdd,\n        children: \"Add Stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StockList, \"27vCac4OKMTA1KdwR2GWvYz5SfI=\");\n\n_c = StockList;\nexport default StockList;\n\nvar _c;\n\n$RefreshReg$(_c, \"StockList\");","map":{"version":3,"sources":["/home/anonymous/PharmaBuddy/src/components/stockList.jsx"],"names":["React","useState","useEffect","userStore","db","getDoc","doc","Navigate","SellMed","StockList","medsList","setMedsList","getState","meds","redirect","setRedirect","addS","setaddS","user","getmeds","ref","uid","docSnap","data","length","handleAdd","map","name","quantity","price"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport userStore from \"../stores/userStore\";\nimport db from \"../firebase\";\nimport { getDoc, doc } from \"firebase/firestore\";\nimport { Navigate } from \"react-router-dom\";\nimport SellMed from \"./sellMed\";\n\nfunction StockList() {\n  const [medsList, setMedsList] = useState(userStore.getState().meds);\n  const [redirect, setRedirect] = useState(false);\n  const [addS, setaddS] = useState(false);\n  const user = userStore.getState().user;\n  useEffect(() => {\n    async function getmeds() {\n      const ref = doc(db, \"Pharma\", user.uid);\n      const docSnap = await getDoc(ref);\n      const data = docSnap.data();\n      if (!data.meds) {\n        setRedirect(true);\n        return;\n      } else if (data.meds.length === 0) setRedirect(true);\n      else setRedirect(false);\n      setMedsList(data.meds);\n    }\n    getmeds();\n  });\n\n  const handleAdd = () => {\n    setRedirect(true);\n  };\n  return (\n    <React.Fragment>\n      {redirect ? (\n        <Navigate to=\"/addmeds\" />\n      ) : (\n        <React.Fragment>\n          <SellMed />\n          <br />\n          <hr />\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Price</th>\n                <th>Quantity</th>\n              </tr>\n            </thead>\n            <tbody>\n              {medsList &&\n                medsList.map(({ name, quantity, price }) => {\n                  return (\n                    <tr key={name}>\n                      <td>{name}</td>\n                      <td>{price}</td>\n                      <td>{quantity}</td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n          <hr />\n          <br />\n          <button className=\"btn selected btn-fluid2\" onClick={handleAdd}>\n            Add Stock\n          </button>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default StockList;\n"]},"metadata":{},"sourceType":"module"}