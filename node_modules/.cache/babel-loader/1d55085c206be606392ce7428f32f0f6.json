{"ast":null,"code":"var _jsxFileName = \"/home/anonymous/PharmaBuddy/src/components/addMed.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useRef, useState, useEffect } from \"react\";\nimport userStore from \"../stores/userStore\";\nimport { Navigate } from \"react-router-dom\";\nimport { getDoc, setDoc, doc } from \"firebase/firestore\";\nimport db from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddMed() {\n  _s();\n\n  const user = userStore.getState().user;\n  const [tokenAdd, setTokenAdd] = useState(false);\n  useEffect(() => {\n    if (!user.uid) return;\n\n    const code = async () => {\n      const ref = doc(db, \"Pharma\", user.uid);\n      const docSnap = await getDoc(ref);\n      var data = docSnap.data();\n      var oldmeds = data.meds;\n\n      if (tokenAdd) {\n        try {\n          var found = false;\n\n          for (var i = 0; i < oldmeds.length; i++) {\n            if (oldmeds[i].name === nameRef.current.value) {\n              oldmeds[i].quantity += parseInt(quantityRef.current.value);\n              oldmeds[i].price = parseInt(priceRef.current.value);\n              found = true;\n              break;\n            }\n          }\n\n          if (!found) {\n            oldmeds.push({\n              name: nameRef.current.value,\n              price: parseInt(priceRef.current.value)\n            });\n          }\n\n          data.meds = oldmeds;\n          await setDoc(ref, data).then(alert(\"Updated\"));\n        } catch (e) {\n          alert(e.message);\n        }\n      }\n    };\n\n    code();\n    setTokenAdd(false);\n  }, [tokenAdd, user.uid]);\n  const nameRef = useRef(null);\n  const quantityRef = useRef(null);\n  const priceRef = useRef(null);\n  if (!user) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 21\n  }, this);\n\n  const handleAdd = e => {\n    e.preventDefault();\n    setTokenAdd(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"btn\",\n        type: \"text\",\n        placeholder: \"Med Name\",\n        ref: nameRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"btn\",\n        type: \"text\",\n        placeholder: \"quantity\",\n        ref: quantityRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"btn\",\n        type: \"text\",\n        placeholder: \"price\",\n        ref: priceRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"btn selected btn-fluid2\",\n        type: \"button\",\n        value: \"Add Stock\",\n        onClick: handleAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddMed, \"7L9W6kjcHOQNCustYJ9xfdf8vjY=\");\n\n_c = AddMed;\nexport default AddMed;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMed\");","map":{"version":3,"sources":["/home/anonymous/PharmaBuddy/src/components/addMed.jsx"],"names":["React","useRef","useState","useEffect","userStore","Navigate","getDoc","setDoc","doc","db","AddMed","user","getState","tokenAdd","setTokenAdd","uid","code","ref","docSnap","data","oldmeds","meds","found","i","length","name","nameRef","current","value","quantity","parseInt","quantityRef","price","priceRef","push","then","alert","e","message","handleAdd","preventDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useRef, useState, useEffect } from \"react\";\nimport userStore from \"../stores/userStore\";\nimport { Navigate } from \"react-router-dom\";\nimport { getDoc, setDoc, doc } from \"firebase/firestore\";\nimport db from \"../firebase\";\n\nfunction AddMed() {\n  const user = userStore.getState().user;\n  const [tokenAdd, setTokenAdd] = useState(false);\n  useEffect(() => {\n    if (!user.uid) return;\n    const code = async () => {\n      const ref = doc(db, \"Pharma\", user.uid);\n      const docSnap = await getDoc(ref);\n      var data = docSnap.data();\n      var oldmeds = data.meds;\n      if (tokenAdd) {\n        try {\n          var found = false;\n          for (var i = 0; i < oldmeds.length; i++) {\n            if (oldmeds[i].name === nameRef.current.value) {\n              oldmeds[i].quantity += parseInt(quantityRef.current.value);\n              oldmeds[i].price = parseInt(priceRef.current.value);\n              found = true;\n              break;\n            }\n          }\n          if (!found) {\n            oldmeds.push({\n              name: nameRef.current.value,\n              price: parseInt(priceRef.current.value),\n            });\n          }\n          data.meds = oldmeds;\n          await setDoc(ref, data).then(alert(\"Updated\"));\n        } catch (e) {\n          alert(e.message);\n        }\n      }\n    };\n    code();\n    setTokenAdd(false);\n  }, [tokenAdd, user.uid]);\n  const nameRef = useRef(null);\n  const quantityRef = useRef(null);\n  const priceRef = useRef(null);\n  if (!user) return <Navigate to=\"/\" />;\n  const handleAdd = (e) => {\n    e.preventDefault();\n    setTokenAdd(true);\n  };\n  return (\n    <div className=\"container\">\n      <form action=\"\">\n        <input class=\"btn\" type=\"text\" placeholder=\"Med Name\" ref={nameRef} />\n        <input\n          class=\"btn\"\n          type=\"text\"\n          placeholder=\"quantity\"\n          ref={quantityRef}\n        />\n        <input class=\"btn\" type=\"text\" placeholder=\"price\" ref={priceRef} />\n        <br />\n        <br />\n        <input\n          class=\"btn selected btn-fluid2\"\n          type=\"button\"\n          value=\"Add Stock\"\n          onClick={handleAdd}\n        />\n      </form>\n    </div>\n  );\n}\n\nexport default AddMed;\n"]},"metadata":{},"sourceType":"module"}